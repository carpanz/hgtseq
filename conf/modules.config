/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        publishDir = [
            path: { "${params.outdir}/QC/fastqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: BWAMEM1_MEM {
        publishDir = [
            path: { "${params.outdir}/preprocess/alignment" },
            mode: params.publish_dir_mode
        ]
    }

    withName: BWAMEM2_MEM {
        publishDir = [
            path: { "${params.outdir}/preprocess/alignment" },
            mode: params.publish_dir_mode
        ]
    }

    withName: TRIMGALORE {
        publishDir = [
            path: { "${params.outdir}/preprocess/trimming" },
            mode: params.publish_dir_mode
        ]
        ext.args = '--illumina'
    }

    withName: SAMTOOLS_INDEX {
        publishDir = [
            path: { "${params.outdir}/preprocess/alignment" },
            mode: params.publish_dir_mode
        ]
    }

    withName: SAMTOOLS_SORT {
        publishDir = [
            path: { "${params.outdir}/preprocess/alignment" },
            mode: params.publish_dir_mode
        ]
        ext.prefix = "sorted"
    }

    withName: SAMTOOLS_VIEW_SINGLE {
        publishDir = [
            path: { "${params.outdir}/exctracted_reads/single_unmapped" },
            mode: params.publish_dir_mode
        ]
        ext.args = '-b -f 5 -F 256'
    }

    withName: SAMTOOLS_VIEW_BOTH {
        publishDir = [
            path: { "${params.outdir}/exctracted_reads/both_unmapped" },
            mode: params.publish_dir_mode
        ]
        ext.args = '-b -f 13 -F 256'
    }

    withName: SAMTOOLS_FASTQ_SINGLE {
        publishDir = [
            path: { "${params.outdir}/converted_reads/single_unmapped" },
            mode: params.publish_dir_mode
        ]
    }

    withName: SAMTOOLS_FASTQ_BOTH {
        publishDir = [
            path: { "${params.outdir}/converted_reads/both_unmapped" },
            mode: params.publish_dir_mode
        ]
    }

    withName: PARSEOUTPUTS {
        publishDir = [
            path: { "${params.outdir}/converted_reads/parsed_integration_sites" },
            mode: params.publish_dir_mode
        ]
    }

    withName: KRAKEN2_SINGLE {
        publishDir = [
            path: { "${params.outdir}/classified/single_unmapped" },
            mode: params.publish_dir_mode
        ]
    }

    withName: KRAKEN2_BOTH {
        publishDir = [
            path: { "${params.outdir}/classified/both_unmapped" },
            mode: params.publish_dir_mode
        ]
    }

    withName: GAWK_SINGLE {
        publishDir = [
            path: { "${params.outdir}/collate_kraken/single_unmapped" },
            mode: params.publish_dir_mode
        ]
    }

    withName: GAWK_BOTH {
        publishDir = [
            path: { "${params.outdir}/collate_kraken/both_unmapped" },
            mode: params.publish_dir_mode
        ]
    }

    withName: KRONA_KTIMPORTTAXONOMY_SINGLE {
        publishDir = [
            path: { "${params.outdir}/results/single_unmapped" },
            mode: params.publish_dir_mode
        ]
    }

    withName: KRONA_KTIMPORTTAXONOMY_BOTH {
        publishDir = [
            path: { "${params.outdir}/results/both_unmapped" },
            mode: params.publish_dir_mode
        ]
    }

    withName: RANALYSIS {
        publishDir = [
            path: { "${params.outdir}/results/analysis_report" },
            mode: params.publish_dir_mode
        ]
    }

    withName: MULTIQC {
        publishDir = [
            path: { "${params.outdir}/QC/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
